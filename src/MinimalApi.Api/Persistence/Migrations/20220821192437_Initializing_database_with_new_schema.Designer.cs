// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinimalApi.Api.Persistence;

#nullable disable

namespace MinimalApi.Api.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220821192437_Initializing_database_with_new_schema")]
    partial class Initializing_database_with_new_schema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MinimalApi.Api.Domain.Entities.Drink", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recipe")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("MinimalApi.Api.Domain.Entities.DrinksIngredients", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DrinkId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IngredientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("DrinkId");

                    b.HasIndex("IngredientId");

                    b.ToTable("DrinksIngredients");
                });

            modelBuilder.Entity("MinimalApi.Api.Domain.Entities.Ingredient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("MinimalApi.Api.Domain.Entities.DrinksIngredients", b =>
                {
                    b.HasOne("MinimalApi.Api.Domain.Entities.Drink", "Drink")
                        .WithMany("DrinksIngredients")
                        .HasForeignKey("DrinkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinimalApi.Api.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany("DrinksIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drink");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("MinimalApi.Api.Domain.Entities.Drink", b =>
                {
                    b.Navigation("DrinksIngredients");
                });

            modelBuilder.Entity("MinimalApi.Api.Domain.Entities.Ingredient", b =>
                {
                    b.Navigation("DrinksIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
